{"name": "test_sachin_page", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id=\"rcnt\"]/div[2]/div/div/div[3]/div/div[1]/div/div/div[2]/div[1]/div/div\"}\n  (Session info: chrome=129.0.6668.100); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF6BE21B645+29573]\n\t(No symbol) [0x00007FF6BE190470]\n\t(No symbol) [0x00007FF6BE04B6EA]\n\t(No symbol) [0x00007FF6BE09F815]\n\t(No symbol) [0x00007FF6BE09FA6C]\n\t(No symbol) [0x00007FF6BE0EB917]\n\t(No symbol) [0x00007FF6BE0C733F]\n\t(No symbol) [0x00007FF6BE0E86BC]\n\t(No symbol) [0x00007FF6BE0C70A3]\n\t(No symbol) [0x00007FF6BE0912DF]\n\t(No symbol) [0x00007FF6BE092441]\n\tGetHandleVerifier [0x00007FF6BE54C58D+3375821]\n\tGetHandleVerifier [0x00007FF6BE597987+3684039]\n\tGetHandleVerifier [0x00007FF6BE58CDAB+3640043]\n\tGetHandleVerifier [0x00007FF6BE2DB7C6+816390]\n\t(No symbol) [0x00007FF6BE19B77F]\n\t(No symbol) [0x00007FF6BE1975A4]\n\t(No symbol) [0x00007FF6BE197740]\n\t(No symbol) [0x00007FF6BE18659F]\n\tBaseThreadInitThunk [0x00007FF987467034+20]\n\tRtlUserThreadStart [0x00007FF9893026A1+33]", "trace": "self = <UseFixtures.test_use_fixtures.TestSachinGanguly object at 0x000001DD66394160>\n\n    def test_sachin_page(self):\n        exp_title = 'Google'\n        actual_title = self.driver.title\n        assert actual_title.__eq__(exp_title)\n        self.driver.find_element(By.NAME, 'q').send_keys('Sachin')\n        self.driver.find_element(By.XPATH, '/html/body/div[1]/div[3]/form/div[1]/div[1]/div[4]/center/input[1]').click()\n        expected_rslt ='Sachin Tendulkar'\n>       actual_rslt = self.driver.find_element(\n            By.XPATH, '//*[@id=\"rcnt\"]/div[2]/div/div/div[3]/div/div[1]/div/div/div[2]/div[1]/div/div').text\n\ntest_use_fixtures.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001DD66394820>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF6BE18659F]\\\\n\\\\tBaseThreadInitThunk [0x00007FF987467034+20]\\\\n\\\\tRtlUserThreadStart [0x00007FF9893026A1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id=\"rcnt\"]/div[2]/div/div/div[3]/div/div[1]/div/div/div[2]/div[1]/div/div\"}\nE         (Session info: chrome=129.0.6668.100); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6BE21B645+29573]\nE       \t(No symbol) [0x00007FF6BE190470]\nE       \t(No symbol) [0x00007FF6BE04B6EA]\nE       \t(No symbol) [0x00007FF6BE09F815]\nE       \t(No symbol) [0x00007FF6BE09FA6C]\nE       \t(No symbol) [0x00007FF6BE0EB917]\nE       \t(No symbol) [0x00007FF6BE0C733F]\nE       \t(No symbol) [0x00007FF6BE0E86BC]\nE       \t(No symbol) [0x00007FF6BE0C70A3]\nE       \t(No symbol) [0x00007FF6BE0912DF]\nE       \t(No symbol) [0x00007FF6BE092441]\nE       \tGetHandleVerifier [0x00007FF6BE54C58D+3375821]\nE       \tGetHandleVerifier [0x00007FF6BE597987+3684039]\nE       \tGetHandleVerifier [0x00007FF6BE58CDAB+3640043]\nE       \tGetHandleVerifier [0x00007FF6BE2DB7C6+816390]\nE       \t(No symbol) [0x00007FF6BE19B77F]\nE       \t(No symbol) [0x00007FF6BE1975A4]\nE       \t(No symbol) [0x00007FF6BE197740]\nE       \t(No symbol) [0x00007FF6BE18659F]\nE       \tBaseThreadInitThunk [0x00007FF987467034+20]\nE       \tRtlUserThreadStart [0x00007FF9893026A1+33]\n\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "start": 1728726300561, "stop": 1728726302900, "uuid": "74b0ea6b-3e57-4876-97df-df3e7a5ba960", "historyId": "f629224ee7ca8a5ab0fac64e6b172d27", "testCaseId": "f629224ee7ca8a5ab0fac64e6b172d27", "fullName": "UseFixtures.test_use_fixtures.TestSachinGanguly#test_sachin_page", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setup_and_tear')"}, {"name": "parentSuite", "value": "UseFixtures"}, {"name": "suite", "value": "test_use_fixtures"}, {"name": "subSuite", "value": "TestSachinGanguly"}, {"name": "host", "value": "DESKTOP-548BCTO"}, {"name": "thread", "value": "3324-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "UseFixtures.test_use_fixtures"}]}